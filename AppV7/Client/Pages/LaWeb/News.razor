@page "/news"
@inherits NewsBase
@using AppV7.Shared
@using AppV7.Shared.Libreria

<RadzenCard>

    @if (Mostrar)
    {
            <div class="form-grup row">
                <div class="col-sm-9">
                    <div class="nav-item px-3">
                        <RadzenButton Icon="add_circle_outline" style="margin-bottom: 10px"
                              Text="Nueva Noticia"
                              Click="@InsertRow" Disabled="@Editando" />
                        <RadzenButton Icon="refresh" style="margin-bottom: 10px" ButtonStyle="ButtonStyle.Info"
                              Click="@Reset" Disabled="@Editando" />
                    </div>
                </div>

                <div class="col-sm-3">
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href=@($"/")>
                            <span class="oi oi-caret-left" aria-hidden="true"></span> Regresar a Inicio
                        </NavLink>
                    </div>
                </div>
            </div>
            <RadzenDataGrid @ref="NewsGrid" Data="@LasNews" TItem="Z810_General"
                    AllowFiltering="true" AllowPaging="true" PageSize="50"
                    AllowSorting="true" AllowColumnResize="true"
                    ExpandMode="DataGridExpandMode.Single" AllowGrouping="false"
                    EditMode="DataGridEditMode.Single"
                    RowUpdate="@OnUpdateRow"
                    RowCreate="@OnCreateRow"
                    RowExpand="@LeerArchivos">

                <Template Context="datos1">

                    <RadzenTabs>
                        <Tabs>
                            <RadzenTabsItem Text="Extras">
                                @foreach(var Archivos in LosArchivos) 
                                {
                                    if(Archivos.FuenteId == datos1.GeneralId) 
                                    {
                                        
                                        <ul>
                                            <li><a href=@($"{ElPath}{Archivos.Archivo}") download="Ivan.jpg">
                                                @Archivos.Archivo</a></li>
                                        </ul>
                                    }
                                }
                                <FilesList Registro="datos1" ElUsuario="ElUsuario" />
                            </RadzenTabsItem>
                        </Tabs>
                    </RadzenTabs>
                </Template>
                <!-- AQUI EMPIEZA REPORTE-->

                <Columns>
                    <RadzenDataGridColumn TItem="Z810_General" Property="Fecha" Title="Fecha" Filterable="true"
                                  Width="150px">
                        <Template Context="datos">
                            <label>@($"{@MyFunc.FormatoFecha("DD/MMM/AA", datos.Fecha)}")</label>
                        </Template>
                        <EditTemplate Context="datos">
                            <RadzenDatePicker Name="Fecha" DateFormat="d" @bind-Value="datos.Fecha" Style="width: 90%" /> <br>

                        </EditTemplate>
                    </RadzenDataGridColumn>

                    <RadzenDataGridColumn TItem="Z810_General" Property="Titulo" Title="Titulo"
                                  Filterable="true" Width="170px">
                        <Template Context="datos">
                        @datos.Titulo
                        </Template>
                        <EditTemplate Context="datos">
                            <RadzenTextBox Name="Titulo" @bind-Value="datos.Titulo" Style="width: 90%" />
                            <RadzenRequiredValidator Component="Titulo" Text="El Titulo es Obligatorio." />
                        </EditTemplate>
                    </RadzenDataGridColumn>

                    <RadzenDataGridColumn TItem="Z810_General" Property="Subtitulo" Title="Subtitulo"
                                  Filterable="true" Width="150px">
                        <Template Context="datos">
                        @datos.Subtitulo
                        </Template>
                        <EditTemplate Context="datos">
                            <RadzenTextBox Name="Subtitulo" @bind-Value="datos.Subtitulo" Style="width: 90%" /><br>
                            
                        </EditTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Z810_General" Property="Nota" Title="Nota"
                                      Filterable="true" Width="200px">
                        <Template Context="datos">
                            @datos.Nota
                        </Template>
                        <EditTemplate Context="datos">
                            <RadzenTextArea Name="Nota" @bind-Value="datos.Nota" Style="width: 90%" />

                        </EditTemplate>
                    </RadzenDataGridColumn>

                    <RadzenDataGridColumn TItem="Z810_General" Property="Comentario" Title="Comentario"
                                  Filterable="true" Width="150px">
                        <Template Context="datos">
                        @datos.Comentario
                        </Template>
                        <EditTemplate Context="datos">
                            <RadzenTextBox Name="Comentario" @bind-Value="datos.Comentario" Style="width: 90%" /><br>

                        </EditTemplate>
                    </RadzenDataGridColumn>

                    <RadzenDataGridColumn TItem="Z810_General" Context="sampleBlazorModelsSampleOrder"
                                  Filterable="false" Sortable="false" TextAlign="TextAlign.Center"
                                  Width="150px" Title="Estado">
                        <Template Context="datos">
                            <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Secondary"
                                  Class="m-1" Click="@((args) => EditRow(datos))" Visible="@(!Editando)">
                            </RadzenButton>

                        @if (datos.Status)
                        {
                                    <label>Activo</label>
                        }
                        else
                        {
                                    <label>Suspendido</label>
                        }

                        </Template>

                        <EditTemplate Context="datos">

                        @if (datos.Estado != 3)
                        {
                                    <label>Borrar este registro? Si </label>
                                    <RadzenSwitch @bind-Value=@datos.Status Name="Status" />
                                    <label>No!</label>
                                    <br />
                        }

                            <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Primary"
                                  Class="m-1" Click="@((args) => SaveRow(datos))">
                            </RadzenButton>

                            <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Class="m-1"
                                  Click="@((args) => CancelEdit(datos))" />

                        </EditTemplate>

                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
    }
    else
    {
            <div class="spinner"></div>
    }
</RadzenCard>


@code {
     
    //LasNews != null && LasNews.Any()
    async void Reset()
    {
        Editando = false;
        await LeerDatos();
    }

    Z810_General NewsToInsert = new();
    async Task EditRow(Z810_General news)
    {
        await NewsGrid!.EditRow(news);
        Editando = !Editando;
    }
    async void OnUpdateRow(Z810_General news)
    {
        if (news == NewsToInsert) NewsToInsert = null!;

        Editando = !Editando;
        await GeneralIServ.UpDateGeneral(news);

        string texto = $"Se actualizo un registro {news.Titulo}";
        texto += $"Subtitulo {news.Subtitulo}, Nota {news.Nota}, comentario {news.Comentario}";
        texto += $"fecha {news.Fecha} ,estado {news.Estado}, visible {news.Status} ";
        await Escribir(ElUsuario.UsuariosId, ElUsuario.OrgId, texto, false);

    }
    async Task SaveRow(Z810_General news)
    {
        await NewsGrid!.UpdateRow(news);
    }
    void CancelEdit(Z810_General news)
    {
        if (news == NewsToInsert) NewsToInsert = null!;
        Editando = !Editando;
        NewsGrid!.CancelEditRow(news);
    }
    async Task InsertRow()
    {
        NewsToInsert = new Z810_General();
        NewsToInsert.GeneralId = Guid.NewGuid().ToString();
        NewsToInsert.Pagina = "Noticias";
        NewsToInsert.Org = ElUsuario.OrgId;
        NewsToInsert.Estado = 3;
        Editando = !Editando;

        await NewsGrid!.InsertRow(NewsToInsert);

    }
    async void OnCreateRow(Z810_General news)
    {
        if (news == NewsToInsert) NewsToInsert = null;
        news.Estado = 1;

        Editando = !Editando;

        Z810_General resultado = new Z810_General();
        resultado = await GeneralIServ.AddGeneral(news);
        await LeerDatos();

        string texto = $"Se creo un registro {news.Titulo}";
        texto += $"Subtitulo {news.Subtitulo}, Nota {news.Nota}, comentario {news.Comentario}";
        texto += $"fecha {news.Fecha} ,estado {news.Estado}, visible {news.Status} ";
        await Escribir(ElUsuario.UsuariosId, ElUsuario.OrgId, texto, false);
    }

    public void ShowNotification(NotificationMessage message)
    {
        // NS.Notify(message);
    }

    async Task LoadData()
    {
        LasNews = await GeneralIServ.Buscar("Allo");
    }

}
