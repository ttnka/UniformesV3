
@inherits OrganizacionesBase
@inject NotificationService NS
@using AppV7.Shared


 
    <div class="form-grup row">        
        <div class="col-sm-9">
            <div class="nav-item px-3">
                <RadzenButton Icon="add_circle_outline" style="margin-bottom: 10px" 
                Text="Nueva Organizacion" 
                Click="@InsertRow" Disabled="@Editando"/>
                <RadzenButton Icon="refresh" style="margin-bottom: 10px" ButtonStyle="ButtonStyle.Info"                 
                Click="@LeerDatos" Disabled="@Editando"/>
            </div>
        </div>
        
        <div class="col-sm-3">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href=@($"/")>
                <span class="oi oi-caret-left" aria-hidden="true"></span> Regresar a Inicio</NavLink>
            </div>
        </div>
    </div>

@if (LasOrgs.Any())
{
    <RadzenCard>       
        <RadzenDataGrid @ref="OrgGrid" Data="@LasOrgs" TItem="Z100_Org" 
            AllowFiltering="true" AllowPaging="true" PageSize="50"
                    AllowSorting="true" AllowColumnResize="true"
                ExpandMode="DataGridExpandMode.Single" AllowGrouping="false"
                EditMode="DataGridEditMode.Single" 
                 RowUpdate="@OnUpdateRow" 
                RowCreate="@OnCreateRow"  >
                
        <Template Context="datos1">
 
            <RadzenTabs>
                <Tabs>
                    <RadzenTabsItem Text="Detalle Empresas ">
                        Uno 
                    </RadzenTabsItem>
                    <RadzenTabsItem Text="Extras">
                        <RadzenDataList WrapItems="true" AllowPaging="true" Data="@LasOrgs" 
                            TItem="Z100_Org" PageSize="10">
                            <Template Context="datos2">
                                <RadzenCard Style="width:100px; height:100px">
                                    <h4 class="text-thin">Organizacion</h4>
                                    <b>@datos2.Comercial</b>
                                </RadzenCard>
                            </Template>
                        </RadzenDataList>
                    </RadzenTabsItem>
                </Tabs>
            </RadzenTabs>
        </Template>
<!-- AQUI EMPIEZA REPORTE-->
        
        <Columns>
            <RadzenDataGridColumn TItem="Z100_Org" Property="Rfc" Title="RFC" Filterable="true"  
                Width="150px">
                <Template Context="datos">
                    @datos.Rfc
                </Template>
                <EditTemplate Context="datos">
                    <RadzenTextBox Name="Rfc" @bind-Value="datos.Rfc" Style="width: 90%" /> <br>
                    <RadzenLengthValidator Component="Rfc" Min="12" Max="13" 
                        Text="El RFC de P Morales es de 12 digitos y 13 de P Fisicas" />

                </EditTemplate>
            </RadzenDataGridColumn>
        
            <RadzenDataGridColumn TItem="Z100_Org" Property="Comercial" Title="Comercial" 
                Filterable="true"  Width="170px">
                <Template Context="datos">
                    @datos.Comercial
                </Template>
                <EditTemplate Context="datos">
                    <RadzenTextBox Name="Comercial" @bind-Value="datos.Comercial" Style="width: 90%" /><br>
                    <RadzenRequiredValidator Component="Comercial" Text="El Nombre Comercial es Obligatorio." />
                </EditTemplate>
            </RadzenDataGridColumn>
        
            <RadzenDataGridColumn TItem="Z100_Org" Property="Moral" Title="Tipo" 
                Filterable="true" Resizable="true" >
                <Template Context="datos">
                @if (datos.Moral)
                {
                    <label>P. Moral</label>
                } else
                {
                    <label>P. Fisica</label>
                }
                </Template>
                
            </RadzenDataGridColumn>
            
            <RadzenDataGridColumn TItem="Z100_Org" Property="RazonSocial" Title="Razon Social" 
                Filterable="true" Resizable="true" Width="400px" >
                <Template Context="datos">
                    @datos.RazonSocial@datos.Nombre @datos.Paterno @datos.Materno
                </Template>
                <EditTemplate Context="datos">
                    @if(datos.Rfc != null && datos.Rfc.Length == 12)
                    {
                        <RadzenTextBox Name="RazonSocial" @bind-Value="datos.RazonSocial" 
                        Placeholder="Nombre de la Empresa" Style="width: 80%" />
                    }
                    else
                    {   
                        <RadzenTextBox Name="Nombre" @bind-Value="datos.Nombre" 
                            Placeholder="Nombre" Style="width: 30%"  /><br />
                        <RadzenTextBox Name="Paterno" @bind-Value="datos.Paterno" 
                            Placeholder="Apellido Paterno" Style="width: 30%"  /><br />
                        <RadzenTextBox Name="Materno" @bind-Value="datos.Materno" 
                            Placeholder="Materno" Style="width: 30%"  />   
                    }
                </EditTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="Z100_Org" Context="sampleBlazorModelsSampleOrder" 
                    Filterable="false" Sortable="false" TextAlign="TextAlign.Center" 
                    Width="250px" Title="Estado">
                <Template Context="datos">
                    @if (datos.Rfc == Constantes.PgRfc || datos.Rfc == Constantes.SyRfc)
                        {
                            <label> </label>
                        }
                        else
                        {
                        <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Secondary" 
                            Class="m-1" Click="@((args) => EditRow(datos))" Visible="@(!Editando)" >
                        </RadzenButton>
                    }
                    @if(datos.Status == true)
                    { 
                        <b>Activo</b>
                    }
                    else
                    {
                        <b>Suspendido</b>
                    }
                    @if (datos.WebAdmin)
                    {
                        <label>Web</label>
                    }
                    </Template>

                <EditTemplate Context="datos">
                    
                    @if (datos.Estado != 3)
                    {
                        <label>Borrar este registro? Si </label>
                        <RadzenSwitch @bind-Value=@datos.Status Name="Status" /> 
                        <label>No!</label>
                        <br />
                    }
                    @if(ElUsuario.Nivel == 7 && (datos.WebAdmin || !HayWebMaster))
                    {
                        <label>Web Master NO</label>
                        <RadzenSwitch @bind-Value=datos.WebAdmin />
                        <label>SI!</label>
                        <br />
                    }

                    @if (datos.Rfc != null && @OrgDic.ContainsKey(datos.Rfc) && datos.Estado == 3)
                    {
                        <label>El RFC ya esta registrado!</label>
                        <br />
                    } 
                    else
                    {
                        <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Primary" 
                            Class="m-1" Click="@((args) => SaveRow(datos))">
                        </RadzenButton>
                    }
                    <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Class="m-1" 
                        Click="@((args) => CancelEdit(datos))" />

                    </EditTemplate>

            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
    </RadzenCard>
} 
else
{
    <div class="spinner"></div>
}

@code {

    Z100_Org OrgToInsert = new();

    async Task EditRow(Z100_Org org)
    {
        await OrgGrid!.EditRow(org);
        Editando = !Editando;
    }
    async void OnUpdateRow(Z100_Org org)
    {
        if (org == OrgToInsert) OrgToInsert = null!;
        org.Rfc = org.Rfc.ToUpper();
        Editando = !Editando;
        await OrgIServ.UpDateOrg(org);

        string texto = $"Se actualizo un registro {org.Rfc}";
        texto += $"{org.Comercial} {org.RazonSocial}";
        await Escribir(ElUsuario.UsuariosId, ElUsuario.OrgId, texto, false);

    }
    async Task SaveRow(Z100_Org org)
    {
        if (string.IsNullOrEmpty(org.Rfc) && string.IsNullOrEmpty(org.Comercial) &&
            (string.IsNullOrEmpty(org.RazonSocial) || string.IsNullOrEmpty(org.Nombre)))
        {
            CancelEdit(org);
        }
        org.Moral = org.Rfc.Length == 13 ? false : true;
        org.Rfc = org.Rfc.ToUpper();

        await OrgGrid!.UpdateRow(org);
    }
    void CancelEdit(Z100_Org org)
    {
        if (org == OrgToInsert) OrgToInsert = null!;
        Editando = !Editando; 
        OrgGrid!.CancelEditRow(org);
    }
    async Task InsertRow()
    {
        OrgToInsert = new Z100_Org();
        OrgToInsert.OrgId = Guid.NewGuid().ToString();
        OrgToInsert.Estado = 3;
        Editando = !Editando;

        await OrgGrid!.InsertRow(OrgToInsert); 

    }
    async void OnCreateRow(Z100_Org org)
    {
        if (org == OrgToInsert) OrgToInsert = null;

        org.Estado = 2;

        org.Rfc = org.Rfc.ToUpper();
        Editando = !Editando;

        Z100_Org resultado = new Z100_Org();
        resultado = await OrgIServ.AddOrg(org);
        await LeerDatos();

        string texto = $"Se creo un registro {org.Rfc}";
            texto += $"{org.Comercial} {org.RazonSocial} desde sistema";
            await Escribir(ElUsuario.UsuariosId, ElUsuario.OrgId, texto, false);
    }

    public void ShowNotification(NotificationMessage message)
    {
        NS.Notify(message);
    }

    async Task LoadData()
    {
        LasOrgs = await OrgIServ.Buscar("All");
    }

}



