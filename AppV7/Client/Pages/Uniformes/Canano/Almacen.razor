@page "/almacenes"
@inherits AlmacenBase
@inject NotificationService NS
@using AppV7.Shared
 
    <div class="form-grup row">        
        <div class="col-sm-9">
            <div class="nav-item px-3">
                <RadzenButton Icon="add_circle_outline" style="margin-bottom: 10px" 
                Text="Nuevo Almacen" 
                Click="@InsertRow" Disabled="@Editando"/>
                <RadzenButton Icon="refresh" style="margin-bottom: 10px" ButtonStyle="ButtonStyle.Info"                 
                Click="@LoadData" />
            </div>
        </div>
        
        <div class="col-sm-3">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href=@($"/inicio")>
                <span class="oi oi-caret-left" aria-hidden="true"></span> Regresar a Inicio</NavLink>
            </div>
        </div>
    </div>

@if (LosAlmacenes != null)
{
    <RadzenCard>       
        <RadzenDataGrid @ref="AlmGrid" Data="@LosAlmacenes" TItem="Z210_Almacen" 
            AllowFiltering="true" AllowPaging="true" PageSize="50"
                    AllowSorting="true" AllowColumnResize="true"
                ExpandMode="DataGridExpandMode.Single" AllowGrouping="false"
                EditMode="DataGridEditMode.Single" 
                 RowUpdate="@OnUpdateRow" 
                RowCreate="@OnCreateRow"  >
                
        <Template Context="datos1">
 
            <RadzenTabs>
                <Tabs>
                    <RadzenTabsItem Text="Detalle Empresas ">
                        Uno 
                    </RadzenTabsItem>
                    <RadzenTabsItem Text="Extras">
                        <RadzenDataList WrapItems="true" AllowPaging="true" Data="@LosAlmacenes" 
                            TItem="Z210_Almacen" PageSize="10">
                            <Template Context="datos2">
                                <RadzenCard Style="width:100px; height:100px">
                                    <h4 class="text-thin">Organizacion</h4>
                                    <b>@datos2.Domicilio @datos2.Municipio</b>
                                </RadzenCard>
                            </Template>
                        </RadzenDataList>
                    </RadzenTabsItem>
                </Tabs>
            </RadzenTabs>
        </Template>
<!-- AQUI EMPIEZA REPORTE-->
        
        <Columns>
            <RadzenDataGridColumn TItem="Z210_Almacen" Property="Corto" Title="Corto" 
                Filterable="true" Width="150px">
                <Template Context="datos">
                    @datos.Corto
                </Template>
                <EditTemplate Context="datos">
                    <RadzenTextBox Name="Corto" @bind-Value="datos.Corto" Style="width: 90%" /> <br>
                    
                    <RadzenLengthValidator Component="Corto" Min="1" Max="15" 
                        Text="El Nombre Corto es Requerido!" />

                </EditTemplate>
            </RadzenDataGridColumn>
        
            <RadzenDataGridColumn TItem="Z210_Almacen" Property="Nombre" Title="Nombre" 
                Filterable="true"  Width="200px">
                <Template Context="datos">
                    @datos.Nombre
                </Template>
                <EditTemplate Context="datos">
                    <RadzenTextBox Name="Nombre" @bind-Value="datos.Nombre" Style="width: 90%" /><br>
                    <RadzenRequiredValidator Component="Nombre" Text="El Nombre es Requerido." />
                </EditTemplate>
            </RadzenDataGridColumn>
        
            <RadzenDataGridColumn TItem="Z210_Almacen" Property="Desc" Title="Descripcion" 
                Filterable="true"  Width="270px">
                <Template Context="datos">
                    @datos.Desc
                </Template>
                <EditTemplate Context="datos">
                    <RadzenTextArea Name="Desc" @bind-Value="datos.Desc" Style="width: 90%" /><br>
                    
                </EditTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="Z210_Almacen" Property="Domicilio" Title="Domicilio" 
                Filterable="true"  Width="270px">
                <Template Context="datos">
                    @datos.Domicilio
                </Template>
                <EditTemplate Context="datos">
                    <RadzenTextArea Name="Domicilio" @bind-Value="datos.Domicilio" Style="width: 90%" /><br>
                    
                </EditTemplate>
            </RadzenDataGridColumn>
            
            <RadzenDataGridColumn TItem="Z210_Almacen" Property="Municipio" Title="Municipio" 
                Filterable="true" Width="200px">
                <Template Context="datos">
                    @datos.Municipio
                </Template>
                <EditTemplate Context="datos">
                        <RadzenDropDown Name="Municipio" Data=@LosMpios @bind-Value=@datos.Municipio
                            ValueProperty="Value" TextProperty="Value" AllowClear="true" 
                            Style="width: 100%;" />
                </EditTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="Z210_Almacen" Context="sampleBlazorModelsSampleOrder" 
                    Filterable="false" Sortable="false" TextAlign="TextAlign.Center" 
                    Width="250px" Title="Estado">
                <Template Context="datos">
                    @if (datos.Corto == "CANACO_HMO")
                    {
                        <label> </label>
                    }
                    else
                    {
                        <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Secondary" 
                            Class="m-1" Click="@((args) => EditRow(datos))" Visible="@(!Editando)" >
                        </RadzenButton>
                    }
                    @if (@datos.Status)
                    {
                        <b>Activo</b>
                    }
                    else
                    {
                        <b>Suspendido</b>
                    }
                    
                </Template>

                <EditTemplate Context="datos">
                    
                    @if (datos.Estado != 3)
                    {
                        <label>Borrar este registro? </label><br />
                        <label> Si </label>
                        <RadzenSwitch @bind-Value=@datos.Status Name="Status" /> 
                        <label> No!</label>
                        <br />
                    }

                    @if (datos.Corto != null && LosAlmacenes.Count() > 0 &&
                    LosAlmacenes.Count(x=>x.Corto==datos.Corto)>0 && datos.Estado == 3)
                    {
                        <label>El Almacen ya esta registrado!</label><br />
                    } 
                    else
                    {
                        <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Primary" 
                            Class="m-1" Click="@((args) => SaveRow(datos))">
                        </RadzenButton>
                    }
                        <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Class="m-1" 
                            Click="@((args) => CancelEdit(datos))" />

                </EditTemplate>

            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
    </RadzenCard>
} 
else
{
    <div class="spinner"></div>
}
--Tatanka--
@code {

    Z210_Almacen AlmToInsert = new();

    async Task EditRow(Z210_Almacen alm)
    {
        await AlmGrid!.EditRow(alm);
        Editando = !Editando;
    }
    async void OnUpdateRow(Z210_Almacen alm)
    {
        if (alm == AlmToInsert) AlmToInsert = null!;
        alm.Corto = alm.Corto.ToUpper();
        Editando = !Editando;
        await AlmIServ.UpDateAlmacen(alm);

        string texto = $"Se actualizo un almacen {alm.Corto} nombre";
        texto += $"{alm.Nombre} {alm.Desc} {alm.Domicilio} {alm.Municipio}";
        await Escribir(ElUsuario.UsuariosId, ElUsuario.OrgId, texto, false);
        ShowNotification(ElMsn("Info", "Se Actualizo",
            $"se actualizo el almacen {alm.Corto} {alm.Nombre} municipio {alm.Municipio}", 0));
    }
    async Task SaveRow(Z210_Almacen alm)
    {
        alm.Corto = alm.Corto.ToUpper();

        await AlmGrid!.UpdateRow(alm);
    }
    void CancelEdit(Z210_Almacen alm)
    {
        if (alm == AlmToInsert) AlmToInsert = null!;
        Editando = !Editando; 
        AlmGrid!.CancelEditRow(alm);
    }
    async Task InsertRow()
    {
        AlmToInsert = new Z210_Almacen();
        AlmToInsert.AlmacenId = Guid.NewGuid().ToString();
        AlmToInsert.Estado = 3;
        AlmToInsert.Municipio = "Hermosillo";
        Editando = !Editando;

        await AlmGrid!.InsertRow(AlmToInsert); 

    }
    async void OnCreateRow(Z210_Almacen alm)
    {
        if (alm == AlmToInsert) AlmToInsert = null;

        alm.Estado = 1;

        alm.Corto = alm.Corto.ToUpper();
     
        Z210_Almacen resultado = new Z210_Almacen();
        resultado = await AlmIServ.AddAlmacen(alm);
        
        string texto = $"Se creo un almacen {alm.Corto}";
        texto += $"{alm.Nombre} {alm.Desc} {alm.Domicilio} {alm.Municipio}";
        await Escribir(ElUsuario.UsuariosId, ElUsuario.OrgId, texto, false);
        ShowNotification(ElMsn("ok", "Nuevo",
            $"Nuevo almacen {alm.Corto} {alm.Nombre} ", 0));
        await LoadData();
    }

    public void ShowNotification(NotificationMessage message)
    {
        NS.Notify(message);
    }

    async Task LoadData()
    {
        LosAlmacenes = await AlmIServ.Buscar("Alla");
        Editando = false;
    }

}
