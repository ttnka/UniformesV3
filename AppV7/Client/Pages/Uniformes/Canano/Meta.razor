@page "/metas"
@inherits MetaBase
@inject NotificationService NS

@using AppV7.Shared

<div class="form-grup row">        
        <div class="col-sm-9">
            <div class="nav-item px-3">
                <RadzenButton Icon="add_circle_outline" style="margin-bottom: 10px" 
                Text="Nueva meta" 
                Click="@InsertRow" Disabled="@Editando"/>
                <RadzenButton Icon="refresh" style="margin-bottom: 10px" ButtonStyle="ButtonStyle.Info"                 
                Click="@LoadData" />
            </div>
        </div>

        <div class="col-sm-3">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href=@($"/inicio")>
                <span class="oi oi-caret-left" aria-hidden="true"></span> Regresar a Inicio</NavLink>
            </div>
        </div>
    </div>

@if (LasMetas != null && LasMetas.Count() >=0 )
{
        <RadzenCard>       
            <RadzenDataGrid @ref="MetaGrid" Data="@LasMetas" TItem="Z290_Meta" 
            AllowFiltering="true" AllowPaging="true" PageSize="50"
                    AllowSorting="true" AllowColumnResize="true"
                ExpandMode="DataGridExpandMode.Single" AllowGrouping="false"
                EditMode="DataGridEditMode.Single" 
                 RowUpdate="@OnUpdateRow" 
                RowCreate="@OnCreateRow"  >

            <Template Context="datos1">

                <RadzenTabs>
                    <Tabs>
                        <RadzenTabsItem Text="Detalle Empresas ">
                            Uno 
                        </RadzenTabsItem>
                        <RadzenTabsItem Text="Extras">
                            <RadzenDataList WrapItems="true" AllowPaging="true" Data="@LasMetas" 
                            TItem="Z290_Meta" PageSize="10">
                                <Template Context="datos2">
                                    <RadzenCard Style="width:100px; height:100px">
                                        <h4 class="text-thin">Organizacion</h4>
                                        <b></b>
                                    </RadzenCard>
                                </Template>
                            </RadzenDataList>
                        </RadzenTabsItem>
                    </Tabs>
                </RadzenTabs>
            </Template>
    <!-- AQUI EMPIEZA REPORTE-->

            <Columns>
                <RadzenDataGridColumn TItem="Z290_Meta" Property="Titulo" Title="Titulo" 
                Filterable="false" Sortable="true" Width="150px">
                    <Template Context="datos">
                        @datos.Titulo
                    </Template>
                    <EditTemplate Context="datos">
                        <RadzenTextBox Name="Titulo" @bind-Value="datos.Titulo" Style="width: 100%" /> <br>
                        <RadzenLengthValidator Component="Titulo" Min="1" Max="25" 
                        Text="El Titulo es Requerido!" />
                    </EditTemplate>
                </RadzenDataGridColumn>

                <RadzenDataGridColumn TItem="Z290_Meta" Property="Tipo" Title="Tipo" 
                Filterable="true"  Width="150px">
                    <Template Context="datos">
                        @datos.Tipo 
                    </Template>
                    <EditTemplate Context="datos">
                        <RadzenDropDown Name="Tipo" Data=@LosTipos @bind-Value=@datos.Tipo
                            ValueProperty="Value" TextProperty="Value" AllowClear="true" 
                            Style="width: 100%;" />
                    </EditTemplate>
                </RadzenDataGridColumn>

                <RadzenDataGridColumn TItem="Z290_Meta" Property="Desc" Title="Descripcion" 
                Filterable="false" Sortable="false"  Width="270px">
                    <Template Context="datos">
                        @datos.Desc
                    </Template>
                    <EditTemplate Context="datos">
                        <RadzenTextArea Name="Desc" @bind-Value="datos.Desc" Style="width: 90%" /><br>

                    </EditTemplate>
                </RadzenDataGridColumn>

                <RadzenDataGridColumn TItem="Z290_Meta" Property="Cantidad" Title="Cantidad" 
                Filterable="false" Sortable="false" Width="100px" TextAlign="TextAlign.Right" >
                    <Template Context="datos">
                        @datos.Cantidad.ToString("N0")
                    </Template>
                    <EditTemplate Context="datos">
                        <RadzenNumeric Name="Cantidad" @bind-Value="datos.Cantidad" Style="width: 100%" 
                            Min=0 ShowUpDown="false" />
                    </EditTemplate>
                </RadzenDataGridColumn>

                <RadzenDataGridColumn TItem="Z290_Meta" Property="Municipio" Title="Municipio"
                    Filterable="false" Sortable="false" Width="170px">
                    <Template Context="datos">
                        @datos.Municipio
                    </Template>
                    <EditTemplate Context="datos">
                            <RadzenDropDown Name="Municipio" Data=@LosMpios @bind-Value=@datos.Municipio
                            ValueProperty="Value" TextProperty="Value" AllowClear="true" 
                            Style="width: 100%;" />
                    </EditTemplate>
                </RadzenDataGridColumn>

                <RadzenDataGridColumn TItem="Z290_Meta" Property="Usuario" Title="Usuario"
                    Filterable="false" Sortable="false" Width="170px">
                    <Template Context="datos">
                        @if(!string.IsNullOrEmpty(datos.Usuario))
                       {
                            @LosUsers.FirstOrDefault(x=>x.UsuariosId==
                                datos.Usuario)!.OldEmail
                            @LosUsers.FirstOrDefault(x=>x.UsuariosId==
                                datos.Usuario)!.Nombre
                       }
                    </Template>
                    <EditTemplate Context="datos">
                            <RadzenDropDown Name="Usuario" Data=@LosUsers @bind-Value=@datos.Usuario
                                    ValueProperty="UsuariosId" TextProperty="OldEmail" AllowClear="true"
                                    Style="width: 100%;" />
                    </EditTemplate>
                </RadzenDataGridColumn>

                <RadzenDataGridColumn TItem="Z290_Meta" Context="sampleBlazorModelsSampleOrder" 
                    Filterable="false" Sortable="false" TextAlign="TextAlign.Center" 
                    Width="250px" Title="Estado">
                    <Template Context="datos">
                        <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Secondary" 
                            Class="m-1" Click="@((args) => EditRow(datos))" Visible="@(!Editando)" >
                        </RadzenButton>
                        @if(@datos.Status)
                        {<b>Activo</b>} else {<b>Suspendido</b>}
                    </Template>

                    <EditTemplate Context="datos">

                        @if (datos.Estado != 3)
                        {
                            <label>Borrar este registro? </label><br />
                            <label> Si </label>
                            <RadzenSwitch @bind-Value=@datos.Status Name="Status" /> 
                            <label> No!</label>
                            <br />
                        }

                        @if (datos.Titulo != null && LasMetas.Count() > 0 &&
                        LasMetas.Count(x=>x.Titulo == datos.Titulo) > 0 && datos.Estado == 3)
                        {
                            <label>El titulo de la meta ya esta registrado!</label><br />
                        }
                        else
                        {
                                <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Primary" 
                            Class="m-1" Click="@((args) => SaveRow(datos))">
                                </RadzenButton>
                        }
                            <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Class="m-1" 
                            Click="@((args) => CancelEdit(datos))" />

                    </EditTemplate>

                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
        </RadzenCard>
}
else
{
        <div class="spinner"></div>
}
--Tatanka--
@code {

    Z290_Meta MetaToInsert = new();

    async Task EditRow(Z290_Meta meta)
    {
        await MetaGrid!.EditRow(meta);
        Editando = !Editando;
    }
    async void OnUpdateRow(Z290_Meta meta)
    {
        if (meta == MetaToInsert) MetaToInsert = null!;
        meta.Titulo = meta.Titulo.ToUpper();
        Editando = !Editando;
        await MetaIServ.UpDateMeta(meta);

        string texto = $"Se actualizo la meta {meta.Titulo} ";
        texto += $"{meta.Tipo} {meta.Desc} Cantitdad {meta.Cantidad}, Usuario {meta.Usuario}, Municipio {meta.Municipio},";
        await Escribir(ElUsuario.UsuariosId, ElUsuario.OrgId, texto, false);
        ShowNotification(ElMsn("Info", "Se Actualizo",
            $"se actualizo la meta {meta.Titulo} {meta.Cantidad}", 0));
    }
    async Task SaveRow(Z290_Meta meta)
    {
        meta.Titulo = meta.Titulo.ToUpper();

        await MetaGrid!.UpdateRow(meta);
    }
    void CancelEdit(Z290_Meta meta)
    {
        if (meta == MetaToInsert) MetaToInsert = null!;
        Editando = !Editando;
        MetaGrid!.CancelEditRow(meta);
    }
    async Task InsertRow()
    {
        MetaToInsert = new Z290_Meta();
        MetaToInsert.MetaId = Guid.NewGuid().ToString();
        MetaToInsert.Estado = 3;

        Editando = !Editando;

        await MetaGrid!.InsertRow(MetaToInsert);

    }
    async void OnCreateRow(Z290_Meta meta)
    {
        if (meta == MetaToInsert) MetaToInsert = null;

        meta.Estado = 1;

        meta.Titulo = meta.Titulo.ToUpper();
        Editando = !Editando;

        Z290_Meta resultado = new Z290_Meta();
        resultado = await MetaIServ.AddMeta(meta);
        await LoadData();

        string texto = $"Se creo una meta {meta.Titulo}";
        texto += $"{meta.Tipo} {meta.Desc}, cantidad {meta.Cantidad}, municipio {meta.Municipio}";
        await Escribir(ElUsuario.UsuariosId, ElUsuario.OrgId, texto, false);
        ShowNotification(ElMsn("ok", "Nueva",
            $"Nuevo meta {meta.Titulo} {meta.Tipo}", 0));
    }

    public void ShowNotification(NotificationMessage message)
    {
        NS.Notify(message);
    }

    async Task LoadData()
    {
        LasMetas = await MetaIServ.Buscar("Alla");
        Editando = false;
    }
}
